@model QuestionManagementSystem.Models.QuestionsPaper@{    ViewBag.Title = "ReviewPaper";    Layout = "~/Views/Shared/_Layout.cshtml";}<h2>ReviewPaper</h2>@using (Html.BeginForm()){@Html.AntiForgeryToken()<div class="form-horizontal">    <h4>QuestionsPaper</h4>    <hr />    @Html.ValidationSummary(true, "", new { @class = "text-danger" })    @Html.HiddenFor(model => model.paperId)    <div class="form-group">        @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })        <div class="col-md-10">            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })            @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })        </div>    </div>    <div class="form-group">        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })        <div class="col-md-10">            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })        </div>    </div>    <div class="form-group">        @Html.LabelFor(model => model.noOfQuestions, htmlAttributes: new { @class = "control-label col-md-2" })        <div class="col-md-10">            @Html.EditorFor(model => model.noOfQuestions, new { htmlAttributes = new { @class = "form-control" } })            @Html.ValidationMessageFor(model => model.noOfQuestions, "", new { @class = "text-danger" })        </div>    </div>    <div class="form-group">        @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })        @Html.DropDownListFor(model => model.status, new List<SelectListItem>{                new SelectListItem { Text = "Pending", Value = "pending" },                new SelectListItem { Text = "Approved", Value = "approved" },                new SelectListItem { Text = "Reject", Value = "rejected" },          }, new { @class = "form-control" })        <span asp-validation-for="Status" class="text-danger"></span>    </div>    @*<div class="form-group">            @Html.LabelFor(model => model.creation_date, htmlAttributes: new { @class = "control-label col-md-2" })            <div class="col-md-10">                @Html.EditorFor(model => model.creation_date, new { htmlAttributes = new { @class = "form-control" } })                @Html.ValidationMessageFor(model => model.creation_date, "", new { @class = "text-danger" })            </div>        </div>*@    @Html.HiddenFor(model => model.creation_date)    <div class="form-group">        @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })        <div class="col-md-10">            @Html.TextBoxFor(model => model.CreatedBy, new { @readonly = "readonly", @class = "form-control" })            @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })        </div>    </div>    <br />    <div>        @Html.ActionLink("View All Questions", "ReviewQuestions", "Admin", new { id = ViewBag.pprId }, new { @class = "btn btn-dark" })    </div>    <br />    <div class="form-group">        <div class="col-md-offset-2 col-md-10">            <input type="submit" value="Save" class="btn btn-default" />        </div>    </div></div>}<div>    @Html.ActionLink("Back to List", "Index")</div>