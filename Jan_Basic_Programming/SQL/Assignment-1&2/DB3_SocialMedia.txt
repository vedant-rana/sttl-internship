CREATE DATABASE SocialMediaDB;

use SocialMediaDB;

-- User table
CREATE TABLE Users (
    UserID INT PRIMARY KEY,
    FirstName NVARCHAR(50),
    LastName NVARCHAR(50),
    Username NVARCHAR(50) UNIQUE,
    Email NVARCHAR(255) UNIQUE,
    RegistrationDate DATETIME
);

INSERT INTO Users (UserID, FirstName, LastName, Username, Email, RegistrationDate)
VALUES
(1, 'John', 'Doe', 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00'),
(2, 'Jane', 'Smith', 'jane_smith', 'jane.smith@example.com', '2022-01-02 13:30:00'),
(3, 'Bob', 'Johnson', 'bob_j', 'bob.j@example.com', '2022-01-03 15:45:00'),
(4, 'Alice', 'Williams', 'alice_w', 'alice.w@example.com', '2022-01-04 10:20:00'),
(5, 'Charlie', 'Brown', 'charlie_b', 'charlie.b@example.com', '2022-01-05 08:15:00'),
(6, 'Eva', 'Miller', 'eva_m', 'eva.m@example.com', '2022-01-06 14:10:00'),
(7, 'David', 'Anderson', 'david_a', 'david.a@example.com', '2022-01-07 17:00:00'),
(8, 'Grace', 'Turner', 'grace_t', 'grace.t@example.com', '2022-01-08 11:30:00'),
(9, 'Frank', 'Wilson', 'frank_w', 'frank.w@example.com', '2022-01-09 09:25:00'),
(10, 'Sara', 'Baker', 'sara_b', 'sara.b@example.com', '2022-01-10 16:40:00');

-- Post table
CREATE TABLE Posts (
    PostID INT PRIMARY KEY,
    UserID INT FOREIGN KEY REFERENCES Users(UserID),
    Content TEXT,
    PostDate DATETIME,
    Likes INT,
    Comments INT
);

INSERT INTO Posts (PostID, UserID, Content, PostDate, Likes, Comments)
VALUES
(1, 1, 'Hello World!', '2022-01-01 12:05:00', 15, 5),
(2, 2, 'This is my first post.', '2022-01-02 14:00:00', 20, 8),
(3, 3, 'Enjoying the weekend!', '2022-01-03 16:30:00', 30, 12),
(4, 4, 'Traveling to new places.', '2022-01-04 10:30:00', 25, 10),
(5, 5, 'Coding all night!', '2022-01-05 09:00:00', 18, 6),
(6, 6, 'Family time is the best.', '2022-01-06 15:45:00', 22, 7),
(7, 7, 'Exploring new hobbies.', '2022-01-07 18:20:00', 28, 9),
(8, 8, 'Chasing dreams.', '2022-01-08 12:40:00', 35, 15),
(9, 9, 'Sunday relaxation.', '2022-01-09 10:15:00', 17, 4),
(10, 10, 'Cooking experiment gone wrong!', '2022-01-10 17:30:00', 12, 3);

-- Comment table
CREATE TABLE Comments (
    CommentID INT PRIMARY KEY,
    PostID INT FOREIGN KEY REFERENCES Posts(PostID),
    UserID INT FOREIGN KEY REFERENCES Users(UserID),
    CommentText TEXT,
    CommentDate DATETIME
);

INSERT INTO Comments (CommentID, PostID, UserID, CommentText, CommentDate)
VALUES
(1, 1, 2, 'Nice post!', '2022-01-01 12:10:00'),
(2, 2, 3, 'Welcome to the platform!', '2022-01-02 14:10:00'),
(3, 3, 4, 'Beautiful picture!', '2022-01-03 16:40:00'),
(4, 4, 5, 'Wish I could travel too.', '2022-01-04 10:45:00'),
(5, 5, 6, 'Coding is life!', '2022-01-05 09:15:00'),
(6, 6, 7, 'Family time is precious indeed.', '2022-01-06 16:00:00'),
(7, 7, 8, 'What hobbies are you exploring?', '2022-01-07 18:45:00'),
(8, 8, 9, 'Keep chasing!', '2022-01-08 13:00:00'),
(9, 9, 10, 'Sunday vibes!', '2022-01-09 10:30:00'),
(10, 10, 1, 'Better luck next time!', '2022-01-10 17:45:00');

-- Friend table
CREATE TABLE Friends (
    FriendshipID INT PRIMARY KEY,
    UserID1 INT FOREIGN KEY REFERENCES Users(UserID),
    UserID2 INT FOREIGN KEY REFERENCES Users(UserID),
    FriendshipDate DATETIME
);

INSERT INTO Friends (FriendshipID, UserID1, UserID2, FriendshipDate)
VALUES
(1, 1, 2, '2022-01-01 12:20:00'),
(2, 3, 4, '2022-01-02 15:00:00'),
(3, 5, 6, '2022-01-03 17:15:00'),
(4, 7, 8, '2022-01-04 11:00:00'),
(5, 9, 10, '2022-01-05 09:45:00'),
(6, 1, 3, '2022-01-06 16:30:00'),
(7, 4, 6, '2022-01-07 19:00:00'),
(8, 8, 10, '2022-01-08 13:30:00'),
(9, 2, 5, '2022-01-09 11:00:00'),
(10, 7, 9, '2022-01-10 18:00:00');

-- Likes table
CREATE TABLE Likes (
    LikeID INT PRIMARY KEY,
    UserID INT FOREIGN KEY REFERENCES Users(UserID),
    PostID INT FOREIGN KEY REFERENCES Posts(PostID),
    LikeDate DATETIME
);

INSERT INTO Likes (LikeID, UserID, PostID, LikeDate)
VALUES
(1, 2, 1, '2022-01-01 12:15:00'),
(2, 3, 2, '2022-01-02 14:30:00'),
(3, 4, 3, '2022-01-03 17:00:00'),
(4, 5, 4, '2022-01-04 11:15:00'),
(5, 6, 5, '2022-01-05 09:30:00'),
(6, 7, 6, '2022-01-06 17:00:00'),
(7, 8, 7, '2022-01-07 19:15:00'),
(8, 9, 8, '2022-01-08 13:45:00'),
(9, 10, 9, '2022-01-09 11:15:00'),
(10, 1, 10, '2022-01-10 18:15:00');


SELECT * FROM Users;
SELECT * FROM Friends;
SELECT * FROM Posts;
SELECT * FROM Comments;
SELECT * FROM Likes;


--========================================================================================================

--INLINE query 
--1. get the number of friends for each user:
SELECT UserID, FirstName, LastName, FriendCount
FROM Users
LEFT JOIN (
    SELECT UserID1, COUNT(*) AS FriendCount
    FROM Friends
    GROUP BY UserID1
) AS FriendsCountView ON Users.UserID = FriendsCountView.UserID1;


--2. show users who liked a specific post
SELECT P.PostID, Content, P.UserID AS LikedByUserID
FROM Posts P
JOIN Likes ON P.PostID = Likes.PostID;


--3. posts with comments made by a specific user:
SELECT P.PostID, Content, CommentText, CommentDate
FROM Posts P
LEFT JOIN Comments ON P.PostID = Comments.PostID
WHERE Comments.UserID = 3;


--SUB QUERY
--1.  find posts with the most likes
SELECT PostID, Content,Likes
FROM Posts
WHERE Likes = (
    SELECT MAX(Likes)
    FROM Posts
);


--2.  show friends of a specific user
SELECT f.UserID2 AS FriendID, u.UserName AS FriendName
FROM Friends f
JOIN Users u ON f.UserID2 = u.UserID
WHERE f.UserID1 = 1;


--3. users who have not received any likes
SELECT UserID, UserName
FROM Users
WHERE UserID NOT IN (
    SELECT DISTINCT UserID
    FROM Likes
);




--========================================================================================================
--Functions in Social Media DB

--String functions
SELECT CONCAT(Content,':', Likes,',', Comments)FROM Posts;
SELECT LEFT(CAST( Content AS varchar), 10)+'...' FROM Posts;
SELECT UPPER(Username) FROM Users;


--MATH FUNCTIONS
SELECT MAX(Likes) AS MostLiked FROM Posts;
SELECT MIN(Likes) AS LeastLiked FROM Posts;
SELECT SUM(Likes) AS Totallikes FROM Posts;


--DATE FUNCTIONS
SELECT DATENAME(DAY, RegistrationDate) FROM Users;
SELECT DATEDIFF(DAY, PostDate, GETDATE()) FROM Posts;
SELECT DATEPART(week, PostDate) FROM Posts;


--ADVANCED FUNCTIONS
SELECT LEFT(CAST( Content AS varchar), 10)+'...' FROM Posts;
SELECT ISNUMERIC(Likes) FROM Posts;
SELECT IIF(Likes>20, 'GOOD', 'AVERAGE') FROM Posts;